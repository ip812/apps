---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: "{{ .Values.database.postgres.name }}-pg"
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: "enabled"
spec:
  imageName: "{{ .Values.database.postgres.image }}"
  instances: 1
  primaryUpdateStrategy: unsupervised
  enablePDB: false
  monitoring:
    enablePodMonitor: true
  storage:
    storageClass: local-path
    size: "{{ .Values.database.postgres.storageSize }}"
  bootstrap:
    {{- if .Values.isInit }}
    initdb:
      database: "{{ .Value.database.postgres.name }}"
      owner: "{{ .Values.database.postgres.username }}"
      secret:
        name: "{{ .Values.name }}-creds"
    {{- else }}
    recovery:
      source: "{{ .Values.database.postgres.name }}-pg-backup"
      database: "{{ .Values.database.postgres.name }}"
      owner: "{{ .Values.database.postgres.username }}"
      secret:
        name: "{{ .Values.name }}-creds"
    {{- end }}
  externalClusters:
    - name: "{{ .Values.database.postgres.name }}-pg-backup"
      barmanObjectStore:
        serverName: "{{ .Values.database.postgres.name }}-pg"
        destinationPath: "s3://{{ .Values.database.postgres.backupsBucket }}"
        s3Credentials:
          accessKeyId:
            name: "{{ .Values.name }}-creds"
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: "{{ .Values.name }}-creds"
            key: AWS_SECRET_ACCESS_KEY
          region:
            name: "{{ .Values.name }}-creds"
            key: AWS_REGION
  backup:
    barmanObjectStore:
      destinationPath: "s3://{{ .Values.database.postgres.backupsBucket }}"
      retentionPolicy: "{{ .Values.database.postgres.retentionPolicy }}"
      s3Credentials:
        accessKeyId:
          name: "{{ .Values.name }}-creds"
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: "{{ .Values.name }}-creds"
          key: AWS_SECRET_ACCESS_KEY
        region:
          name: "{{ .Values.name }}-creds"
          key: AWS_REGION
      wal:
        compression: gzip
      data:
        compression: gzip
