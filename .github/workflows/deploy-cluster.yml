---
name: Deploy cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-cluster:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # There is 1 HA instance
          instance_id=$(aws ec2 describe-instances \
            --region "${AWS_REGION}" \
            --filters "Name=tag:Environment,Values=prod" "Name=tag:Organization,Values=ip812" \
            --query "Reservations[].Instances[].InstanceId" \
            --output json | jq -r '.[]' | head -n 1)

          CMD="export IP812_TUNNEL_TOKEN=${{ secrets.IP812_TUNNEL_TOKEN }} && \
            curl -H \"Authorization: token ${{ secrets.GH_ACCESS_TOKEN }}\" \
            -s https://raw.githubusercontent.com/${{ github.repository }}/main/prod/docker-stack.yml | \
            docker stack deploy -c - ip812 --with-registry-auth" \
          INSTANCE_ID="${instance_id}" .github/scripts/aws-ssm-exec-cmd-on-ec2.sh

          sleep 10

          CMD="docker service ls --format '{{.Name}} {{.Replicas}}'" \
          INSTANCE_ID="${instance_id}" .github/scripts/aws-ssm-exec-cmd-on-ec2.sh > deploy_cluster_result.txt
          - name: Upload File

      - name: Upload result artfifact for "Deploy cluster"
        uses: actions/upload-artifact@v4
        with:
          name: deploy-cluster-result
          path : deploy_cluster_result.txt

  discord-notification:
    runs-on: ubuntu-latest
    needs: deploy-cluster

    steps:
      - name: Download result artfifact for "Deploy cluster"
        uses: actions/download-artifact@v4
        with:
          name: deploy-cluster-result

      - name: Decode and Send Notification to Discord
        run: |
          cat deploy_cluster_result.txt

