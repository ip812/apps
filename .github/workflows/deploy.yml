name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to ECR
      id: ecr
      uses: jwalton/gh-ecr-login@v3
      with:
        region: ${{ secrets.AWS_REGION }}
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Get ECR Registry Token
      id: ecr-token
      run: |
        echo "REGISTRY_TOKEN=$(aws ecr get-login-password --region ${{ secrets.AWS_REGION }})" >> $GITHUB_ENV

    - name: Deploy
      run: |
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}

        while read -r instance_id; do
            aws ssm send-command \
                --region ${{ secrets.AWS_REGION }} \
                --document-name "AWS-RunShellScript" \
                --targets "Key=instanceIds,Values=${instance_id}" \
                --parameters 'commands=[
                    "export IP812_TUNNEL_TOKEN=${{ secrets.IP812_TUNNEL_TOKEN }} && curl -H \"Authorization: token ${{ secrets.REPO_TOKEN }}\" -s https://raw.githubusercontent.com/${{ github.repository }}/main/prod/docker-stack.yml | docker stack deploy -c - ip812 --prune"
                ]'
        done < <(aws ec2 describe-instances \
            --region ${{ secrets.AWS_REGION }} \
            --filters "Name=tag:Environment,Values=prod" "Name=tag:Organization,Values=ip812" \
            --filters "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" \
            --output json | jq -r '.[]')



